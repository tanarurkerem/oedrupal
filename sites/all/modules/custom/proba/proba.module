<?php

function proba_menu() {
  $items['proba'] = array(
    'title' => 'Example Page',
    'page callback' => 'proba_page',
    'access arguments' => array('access content'),
  );
  $items['proba/add'] = array(
    'title' => 'Add Proba',
    'page callback' => 'proba_add',
    'access arguments' => array('access content'),
  );
  $items['proba/%proba'] = array(
    'title' => 'Edit Proba',
    'page callback' => 'proba_edit',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  $items['nodelista'] = array(
    'title' => 'Nodelista Page',
    'page callback' => 'proba_nodelista',
    'access arguments' => array('access content'),
  );

  return $items;
}

function proba_page() {
  $header = array(
      array(
          'data' => t('Name'),
          'field' => 'name',
          ),
      t('Phone'),
      t('Operations'),
  );
  $rows = array();
  $res = db_select('proba', 'p')
          ->extend('TableSort')
          ->extend('PagerDefault')
          ->fields('p')
          ->orderByHeader($header)
          ->limit(10)
          ->execute();
  foreach ($res as $row) {
    $rows[] = array(
        $row->name,
        $row->phone,
        l(t('Edit'), 'proba/' . $row->id),
    );
  }
  return array(
      array(
          '#theme' => 'pager',
      ),
      array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
      ),
      array(
          '#theme' => 'pager',
      ),
  );
}

function proba_nodelista() {
  $header = array(
      array(
          'data' => t('Title'),
          'field' => 'n.title',
          ),
      t('Name'),
      t('Created Time'),
  );
  $rows = array();
  $select = db_select('node', 'n')
          ->extend('TableSort')
          ->extend('PagerDefault')
          ->fields('n', array('nid', 'title', 'created'));
  $alias = $select->leftJoin('users', 'u', 'n.uid = u.uid');
  $res = $select->fields($alias, array('uid', 'name'))
          ->orderByHeader($header)
          ->limit(10)
          ->execute();
  foreach ($res as $row) {
    $rows[] = array(
        l($row->title, 'node/' . $row->nid),
        l($row->name, 'user/' . $row->uid),
        format_date($row->created),
    );
  }
  return array(
      array(
          '#theme' => 'pager',
      ),
      array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
      ),
      array(
          '#theme' => 'pager',
      ),
  );
}

function proba_add() {
  return drupal_get_form('proba_add_form');
}

function proba_add_form($form, &$form_state, $proba = FALSE) {
  return array(
      'name' => array(
          '#type' => 'textfield',
          '#title' => t('Name'),
          '#required' => TRUE,
          '#default_value' => $proba !== FALSE ? $proba['name'] : '',
      ),
      'phone' => array(
          '#type' => 'textfield',
          '#title' => t('Phone'),
          '#default_value' => $proba !== FALSE ? $proba['phone'] : '',
      ),
      'id' => array(
          '#type' => 'hidden',
          '#value' => $proba !== FALSE ? $proba['id'] : 0,
      ),
      'submit' => array(
          '#type' => 'submit',
          '#value' => $proba !== FALSE ? t('Save') : t('Add'),
      ),
  );
}

function proba_add_form_validate($form, &$form_state) {
  if (!preg_match('/^[+0-9-]+$/', $form_state['values']['phone'])) {
    form_set_error('phone', t('Only +, -, and numbers allowed'));
  }
}

function proba_add_form_submit($form, &$form_state) {
  if ($form_state['values']['id'] == 0) {
    db_insert('proba')
    ->fields(array(
      'name' => $form_state['values']['name'],
      'phone' => $form_state['values']['phone'],
    ))
    ->execute();
  }
  else {
    db_update('proba')
    ->fields(array(
      'name' => $form_state['values']['name'],
      'phone' => $form_state['values']['phone'],        
    ))
    ->condition('id', $form_state['values']['id'])
    ->execute();
  }
}

function proba_load($id) {
  $res = db_select('proba', 'p')
  ->fields('p')
  ->condition('p.id', $id)
  ->execute();
  return $res->fetchAssoc();
}

function proba_edit($proba) {
  return drupal_get_form('proba_add_form', $proba);
}